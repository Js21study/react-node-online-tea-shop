[{"C:\\proekty\\react node download project ecommerce\\client\\src\\index.js":"1","C:\\proekty\\react node download project ecommerce\\client\\src\\App.js":"2","C:\\proekty\\react node download project ecommerce\\client\\src\\store\\UserStore.js":"3","C:\\proekty\\react node download project ecommerce\\client\\src\\components\\AppRouter.js":"4","C:\\proekty\\react node download project ecommerce\\client\\src\\http\\userAPI.js":"5","C:\\proekty\\react node download project ecommerce\\client\\src\\components\\NavBar.js":"6","C:\\proekty\\react node download project ecommerce\\client\\src\\http\\index.js":"7","C:\\proekty\\react node download project ecommerce\\client\\src\\routes.js":"8","C:\\proekty\\react node download project ecommerce\\client\\src\\utils\\consts.js":"9","C:\\proekty\\react node download project ecommerce\\client\\src\\pages\\Auth.js":"10","C:\\proekty\\react node download project ecommerce\\client\\src\\pages\\Shop.js":"11","C:\\proekty\\react node download project ecommerce\\client\\src\\pages\\Basket.js":"12","C:\\proekty\\react node download project ecommerce\\client\\src\\pages\\Admin.js":"13","C:\\proekty\\react node download project ecommerce\\client\\src\\components\\Pages.js":"14","C:\\proekty\\react node download project ecommerce\\client\\src\\components\\TypeBar.js":"15","C:\\proekty\\react node download project ecommerce\\client\\src\\components\\modals\\CreateType.js":"16","C:\\proekty\\react node download project ecommerce\\client\\src\\store\\TeaStore.js":"17","C:\\proekty\\react node download project ecommerce\\client\\src\\http\\teaAPI.js":"18","C:\\proekty\\react node download project ecommerce\\client\\src\\components\\TeaList.js":"19","C:\\proekty\\react node download project ecommerce\\client\\src\\components\\SortBar.js":"20","C:\\proekty\\react node download project ecommerce\\client\\src\\components\\modals\\CreateTea.js":"21","C:\\proekty\\react node download project ecommerce\\client\\src\\components\\modals\\CreateSort.js":"22","C:\\proekty\\react node download project ecommerce\\client\\src\\components\\TeaItem.js":"23","C:\\proekty\\react node download project ecommerce\\client\\src\\pages\\TeaPage.js":"24","C:\\proekty\\react node download project ecommerce\\client\\src\\components\\Footer.js":"25","C:\\proekty\\react node download project ecommerce\\client\\src\\http\\clientAPI.js":"26","C:\\proekty\\react node download project ecommerce\\client\\src\\components\\NavBarComp.js":"27"},{"size":449,"mtime":1667271732025,"results":"28","hashOfConfig":"29"},{"size":970,"mtime":1667511445881,"results":"30","hashOfConfig":"29"},{"size":401,"mtime":1611985807000,"results":"31","hashOfConfig":"29"},{"size":798,"mtime":1667426153740,"results":"32","hashOfConfig":"29"},{"size":695,"mtime":1667166383387,"results":"33","hashOfConfig":"29"},{"size":5549,"mtime":1667879186677,"results":"34","hashOfConfig":"29"},{"size":407,"mtime":1611985807000,"results":"35","hashOfConfig":"29"},{"size":758,"mtime":1667946364314,"results":"36","hashOfConfig":"29"},{"size":222,"mtime":1667092728732,"results":"37","hashOfConfig":"29"},{"size":3149,"mtime":1667094565208,"results":"38","hashOfConfig":"29"},{"size":2450,"mtime":1667426075721,"results":"39","hashOfConfig":"29"},{"size":3770,"mtime":1667782540410,"results":"40","hashOfConfig":"29"},{"size":1471,"mtime":1667093967804,"results":"41","hashOfConfig":"29"},{"size":786,"mtime":1667089186842,"results":"42","hashOfConfig":"29"},{"size":903,"mtime":1667099591295,"results":"43","hashOfConfig":"29"},{"size":1330,"mtime":1667093728545,"results":"44","hashOfConfig":"29"},{"size":1424,"mtime":1667879133871,"results":"45","hashOfConfig":"29"},{"size":927,"mtime":1667511275027,"results":"46","hashOfConfig":"29"},{"size":1325,"mtime":1667879151262,"results":"47","hashOfConfig":"29"},{"size":741,"mtime":1667099899527,"results":"48","hashOfConfig":"29"},{"size":5968,"mtime":1667856000558,"results":"49","hashOfConfig":"29"},{"size":1324,"mtime":1667093689806,"results":"50","hashOfConfig":"29"},{"size":1109,"mtime":1667783297262,"results":"51","hashOfConfig":"29"},{"size":2140,"mtime":1667946232369,"results":"52","hashOfConfig":"29"},{"size":747,"mtime":1667182465596,"results":"53","hashOfConfig":"29"},{"size":295,"mtime":1667574772737,"results":"54","hashOfConfig":"29"},{"size":1105,"mtime":1667869432202,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1h663m9",{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"58"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"58"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"58"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"58"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"58"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"C:\\proekty\\react node download project ecommerce\\client\\src\\index.js",[],["123","124"],"C:\\proekty\\react node download project ecommerce\\client\\src\\App.js",["125","126"],"import React, {useContext, useEffect, useState} from 'react';\nimport {BrowserRouter} from \"react-router-dom\";\nimport AppRouter from \"./components/AppRouter\";\nimport NavBar from \"./components/NavBar\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"./index\";\nimport {check} from \"./http/userAPI\";\nimport {Spinner, Image} from \"react-bootstrap\";\nimport Footer from './components/Footer';\n\n\nconst App = observer(() => {\n    const {user} = useContext(Context)\n    const [loading, setLoading] = useState(true)\n    \n\n    \n\n    \n\n    \n\n    \n\n    useEffect(() => {\n        check().then(data => {\n            user.setUser(true)\n            user.setIsAuth(true)\n        }).finally(() => setLoading(false))\n    }, [])\n\n    if (loading) {\n        return <Spinner animation={\"grow\"}/>\n    }\n\n    return (\n        <BrowserRouter>\n            <NavBar />\n        \n            <AppRouter />\n            <Footer/>\n        </BrowserRouter>\n    );\n});\n\nexport default App;\n","C:\\proekty\\react node download project ecommerce\\client\\src\\store\\UserStore.js",[],"C:\\proekty\\react node download project ecommerce\\client\\src\\components\\AppRouter.js",[],"C:\\proekty\\react node download project ecommerce\\client\\src\\http\\userAPI.js",[],"C:\\proekty\\react node download project ecommerce\\client\\src\\components\\NavBar.js",["127","128","129","130"],"import React, {useContext} from 'react';\n\nimport {Context} from \"../index\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Form from \"react-bootstrap/Form\";\nimport {NavLink} from \"react-router-dom\";\nimport {ADMIN_ROUTE, LOGIN_ROUTE, SHOP_ROUTE, BASKET_ROUTE, TEA_ROUTE} from \"../utils/consts\";\nimport {Button} from \"react-bootstrap\";\nimport {observer} from \"mobx-react-lite\";\nimport Container from \"react-bootstrap/Container\";\nimport {useHistory} from 'react-router-dom'\nimport { FaShoppingCart } from \"react-icons/fa\"\nimport { useState } from 'react';\nimport { FaTrash } from 'react-icons/fa'\nimport NavBarComp from './NavBarComp';\n\n\n\nconst NavBar = observer(() => {\n    \n    const {user} = useContext(Context)\n    const {tea} = useContext(Context)\n    const history = useHistory()\n    \n    \n    let [cartOpen, setCartOpen] = useState(false)\n    let [query, setQuery] = useState(\"\")\n    let [sum, setSum] = useState(0)\n   \n\n    const filtredTea = tea.teas.filter( tea => {\n        return tea.name.toLowerCase().includes(query.toLowerCase())\n    })\n\n    \n\n\n    \n\n    const logOut = () => {\n        user.setUser({})\n        user.setIsAuth(false)\n    }\n\n    \n    \n\n    const showOrders = () => {\n        \n\n\n        const deleteOrders = (id) => {\n       \n                tea.setOrders(tea.orders.filter(el => el.id !== id))  \n           \n        \n            \n          }\n\n    \n\n        let summa = 0\n        tea.orders.forEach(el => summa += Number.parseFloat(el.price))\n        return (\n            <div>\n                {tea.orders.map(el => (\n                    <div className='item' key={el.id}>\n                    <img src={process.env.REACT_APP_API_URL + el.img} alt='item'/>\n                   <h2>{el.title}</h2>\n                   <b>{el.price} грн</b>\n                   \n                    \n                   <FaTrash className='delete-icon' onClick={() => deleteOrders(el.id)}/>\n                 </div>\n                ))}\n                \n                <p className='summa'>Сумма: {new Intl.NumberFormat().format(summa)} грн  <span className='closeBusket' style={{marginLeft: 200}} onClick={() => setCartOpen(cartOpen = !cartOpen)} >X</span></p>\n                <Button  className='m-1' variant='success' onClick={() => {\n                    \n                    history.push(BASKET_ROUTE)\n                    setCartOpen(cartOpen = !cartOpen)\n                }}>Підтвердити замовлення</Button>\n                \n                        \n    \n            </div>\n        )\n    }\n    \n    const showNothing = () => {\n        return (<div className='empty'>\n            <span>У корзині ще нічого немає</span>\n            <span className='closeBusket' onClick={() => setCartOpen(cartOpen = !cartOpen)} >X</span>\n\n        </div>)\n    }\n\n    return (\n        <>\n        <Navbar className='header' bg=\"dark\" variant=\"dark\">\n            <Container>\n                <NavLink style={{color:'white'}} to={SHOP_ROUTE}>Чайна Файна</NavLink>\n\n                <Form className=\"d-flex mx-2\">\n            <Form.Control\n              type=\"search\"\n              placeholder=\"Знайти...\"\n              className=\"mx-2\"\n              aria-label=\"Search\"\n              onChange={(e) => setQuery(e.target.value)}\n            \n\n            />\n            <Button variant=\"outline-warning\">Пошук</Button>\n          </Form>\n                {user.isAuth ?\n                    <Nav className=\"ml-auto\" style={{color: 'white'}}>\n                        <Button\n                            variant={\"outline-light\"}\n                            onClick={() => history.push(ADMIN_ROUTE)}\n                        >\n                            Адмін панель\n                        </Button>\n                        <Button\n                            variant={\"outline-light\"}\n                            onClick={() => logOut()}\n                            className=\"ml-2\"\n                        >\n                            Вихід\n                        </Button>\n                    </Nav>\n                    :\n                    <Nav className=\"ml-auto\" style={{color: 'white'}}>\n                        <Button variant={\"outline-light\"} onClick={() => history.push(LOGIN_ROUTE)}>Авторизація</Button>\n                    </Nav>\n                    \n                }\n                 <FaShoppingCart onClick={() => setCartOpen(cartOpen = !cartOpen)} className={`shop-cart-button ${cartOpen && 'active'}`}/>\n\n            \n                {cartOpen && (\n            <div className='shop-cart'>\n                {tea.orders.length > 0 ?\n                    showOrders() : showNothing()}\n            </div>\n        )}\n\n\n                \n            </Container>\n            \n        </Navbar>\n        <div>\n            <Container className='bg-light d-flex border border-1'>\n                    {query !== \"\"\n                    ? filtredTea.map( tea => \n                       <div>{tea.name}\n                       <img style={{width: 100}} src={process.env.REACT_APP_API_URL + tea.img} alt=\"image\" />\n                       <p style={{cursor: \"pointer\"}} className='text-danger' onClick={() => { \n                        history.push(TEA_ROUTE + '/' + tea.id)\n                        setQuery('')}}>Дізнатись більше ... </p>\n                       </div> )\n                    : \"\"\n                    }\n                </Container>\n            </div>\n        </>\n\n    );\n});\n\nexport default NavBar;\n","C:\\proekty\\react node download project ecommerce\\client\\src\\http\\index.js",[],"C:\\proekty\\react node download project ecommerce\\client\\src\\routes.js",[],"C:\\proekty\\react node download project ecommerce\\client\\src\\utils\\consts.js",[],"C:\\proekty\\react node download project ecommerce\\client\\src\\pages\\Auth.js",["131"],"import React, {useContext, useState} from 'react';\nimport {Container, Form} from \"react-bootstrap\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport {NavLink, useLocation, useHistory} from \"react-router-dom\";\nimport {LOGIN_ROUTE, REGISTRATION_ROUTE, SHOP_ROUTE} from \"../utils/consts\";\nimport {login, registration} from \"../http/userAPI\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\n\nconst Auth = observer(() => {\n    const {user} = useContext(Context)\n    const location = useLocation()\n    const history = useHistory()\n    const isLogin = location.pathname === LOGIN_ROUTE\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const click = async () => {\n        try {\n            let data;\n            if (isLogin) {\n                data = await login(email, password);\n            } else {\n                data = await registration(email, password);\n            }\n            user.setUser(user)\n            user.setIsAuth(true)\n            history.push(SHOP_ROUTE)\n        } catch (e) {\n            alert(e.response.data.message)\n        }\n\n    }\n\n    return (\n        <Container\n            className=\"d-flex justify-content-center align-items-center\"\n            style={{height: window.innerHeight - 54}}\n        >\n            <Card style={{width: 600}} className=\"p-5\">\n                <h2 className=\"m-auto\">{isLogin ? 'Авторизація' : \"Реєстрація\"}</h2>\n                <Form className=\"d-flex flex-column\">\n                    <Form.Control\n                        className=\"mt-3\"\n                        placeholder=\"Введите ваш email...\"\n                        value={email}\n                        onChange={e => setEmail(e.target.value)}\n                    />\n                    <Form.Control\n                        className=\"mt-3\"\n                        placeholder=\"Введите ваш пароль...\"\n                        value={password}\n                        onChange={e => setPassword(e.target.value)}\n                        type=\"password\"\n                    />\n                    <Row className=\"d-flex justify-content-between mt-3 pl-3 pr-3\">\n                        {isLogin ?\n                            <div>\n                                Ще не реєструвався? <NavLink to={REGISTRATION_ROUTE}>Зареєструйся</NavLink>\n                            </div>\n                            :\n                            <div>\n                                Вже зареєстрований? <NavLink to={LOGIN_ROUTE}>Увійти</NavLink>\n                            </div>\n                        }\n                        <Button\n                            variant={\"outline-success\"}\n                            onClick={click}\n                        >\n                            {isLogin ? 'Вхід' : 'Реєстрація'}\n                        </Button>\n                    </Row>\n\n                </Form>\n            </Card>\n        </Container>\n    );\n});\n\nexport default Auth;\n","C:\\proekty\\react node download project ecommerce\\client\\src\\pages\\Shop.js",["132","133","134","135"],"import React, {useContext, useEffect} from 'react';\nimport {Container} from \"react-bootstrap\";\nimport {Image} from \"react-bootstrap\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport TypeBar from \"../components/TypeBar\";\nimport SortBar from \"../components/SortBar\";\nimport TeaList from \"../components/TeaList\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\nimport {fetchSorts, fetchTeas, fetchTypes} from \"../http/teaAPI\";\nimport Pages from \"../components/Pages\";\n\nconst Shop = observer(() => {\n    const {tea} = useContext(Context)\n\n    useEffect(() => {\n        fetchTypes().then(data => tea.setTypes(data))\n        fetchSorts().then(data => tea.setSorts(data))\n        fetchTeas(null, null, 1, 2).then(data => {\n            tea.setTeas(data.rows)\n            tea.setTotalCount(data.count)\n        })\n    }, [])\n\n    useEffect(() => {\n        fetchTeas(tea.selectedType.id, tea.selectedSort.id, tea.page, 2).then(data => {\n            tea.setTeas(data.rows)\n            tea.setTotalCount(data.count)\n        })\n    }, [tea.page, tea.selectedType, tea.selectedSort,])\n\n    return (\n        <Container className='d-flex'>\n            <Row className=\"mt-2\">\n                <Col md={3}>\n                    <TypeBar/>\n                </Col>\n                <Col md={6}>\n                    <SortBar/>\n                    <TeaList/>\n                    <Pages/>\n                </Col>\n                <Col md={3}>\n                    <img style={{width: 250}} src='https://n1s1.hsmedia.ru/5b/a8/e8/5ba8e8249ded64dc6d5a477954457ef1/1200x900_0xac120003_7416788391639943180.jpeg' alt='image'/>\n                   <p>Чай у Китаї відносять до семи речей, вживаних щодня. Серед них – дрова, рис, сіль, масло, оцет і соєвий соус. Чай тут не просто напій. Він відіграє важливу роль у традиційній китайській медицині, кухні та буддизмі. Існує така приказка: «Чай і чань (буддійська філософія) одного смаку».\nА ще чай дуже корисний. Може, саме тому китайці – одна з найздоровіших націй на планеті.</p>\n                </Col>\n            </Row>\n        </Container>\n    );\n});\n\nexport default Shop;\n","C:\\proekty\\react node download project ecommerce\\client\\src\\pages\\Basket.js",["136","137","138"],"import React, {useContext, useEffect, useState} from 'react';\n\nimport {Context} from \"../index\";\n\nimport { Container, Button, Form, Alert} from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport {SHOP_ROUTE} from \"../utils/consts\";\nimport { createBasket, fetchBasket } from '../http/clientAPI';\n\n\n\n\n\n\nconst Basket = () => {\n    const history = useHistory()\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [phone, setPhone] = useState('')\n    \n    const {tea} = useContext(Context)\n\n    // const summaCount = () => {\n\n    // let summa = 0\n    //     tea.orders.forEach(el => summa += Number.parseFloat(el.price))\n    //     return summa\n    // }\n\n//     useEffect(() => {\n//         tea.orders.map(or => setOrders(...order, or)\n//    },[tea.orders])\n\n// , number: Date.now()\n\n\n\n    \n// useEffect(() => {\n//     console.log(tea.orders);\n//     tea.orders.map((t) =>\n\n//     setOrder([...order, {name: t.name, price: t.price, teaId: t.id}])\n    \n//     )\n// }, [tea.orders]) \n\n\n\n\n\n\n\n    const finish = async () => {\n        try {\n    const formData = new FormData()\n    formData.append('name', name)\n    formData.append('email', email)\n    formData.append('phone', phone)\n    formData.append('order', JSON.stringify(tea.orders))\n    createBasket(formData)\n            history.push(SHOP_ROUTE)\n            alert('Ваше замовлення прийнято! Чекайте на дзвінок!')\n            \n        } catch (e) {\n            alert(e.response.data.message)\n        }\n    }\n\n\n\n   \n      \n\n   \n\n   \n\n\n    return (\n        <div>\n            <div>\n                <Container>\n                {tea.orders.length > 0 ?\n                <div className='m-5 border border-1 p-5'>\n                    \n                    \n                    {/* <p className='summa-basket'>  Сумма замовлення: {new Intl.NumberFormat().format(summaCount())} грн  </p> */}\n                    <Button variant={\"outline-danger\"} onClick={() => history.push(SHOP_ROUTE)}>Змінити або додати щось до замовлення</Button>\n\n                    <Form className=\"d-flex flex-column\">\n                    <Form.Control\n                        className=\"mt-3\"\n                        placeholder=\"Введіть Ваше ім'я\"\n                        value={name}\n                        onChange={e => setName(e.target.value)}\n                    />\n                    <Form.Control\n                        className=\"mt-3\"\n                        placeholder=\"Введіть Ваше email\"\n                        value={email}\n                        onChange={e => setEmail(e.target.value)}\n                    />\n                    <Form.Control\n                        className=\"mt-3\"\n                        placeholder=\"Введіть Ваш телефон\"\n                        value={phone}\n                        onChange={e => setPhone(e.target.value)}\n                        type=\"number\"\n                    />\n                    \n                        <Button\n                        className='m-1'\n                            variant={\"outline-success\"}\n                            onClick={() =>{\n                         \n                                finish()\n                            }\n                        }\n                        >\n                            Підтвердити\n                        </Button>\n                    \n\n                </Form>\n                    </div>  \n                    : <p>Корзина пуста</p> }\n                \n                \n                \n                \n                </Container>       \n    \n            </div>\n        </div>\n    );\n};\n\nexport default Basket;\n","C:\\proekty\\react node download project ecommerce\\client\\src\\pages\\Admin.js",[],"C:\\proekty\\react node download project ecommerce\\client\\src\\components\\Pages.js",[],"C:\\proekty\\react node download project ecommerce\\client\\src\\components\\TypeBar.js",["139"],"import React, {useContext} from 'react';\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\nimport Col from \"react-bootstrap/Col\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\n\nconst TypeBar = observer(() => {\n    const {tea} = useContext(Context)\n\n   \n    \n\n    return (\n        <ListGroup>\n            {tea.types.map(type =>\n                <ListGroup.Item\n                    style={{cursor: 'pointer'}}\n                    variant={type.id === tea.selectedType.id ? 'warning': 'light'}\n                    onClick={() => {\n                        tea.setSelectedType(type)\n                        tea.setSelectedSort([])\n                    }}\n            \n                    \n                    key={type.id}\n                >\n                    {type.name}\n                </ListGroup.Item>\n            )}\n        </ListGroup>\n    );\n});\n\nexport default TypeBar;\n","C:\\proekty\\react node download project ecommerce\\client\\src\\components\\modals\\CreateType.js",[],"C:\\proekty\\react node download project ecommerce\\client\\src\\store\\TeaStore.js",[],"C:\\proekty\\react node download project ecommerce\\client\\src\\http\\teaAPI.js",[],"C:\\proekty\\react node download project ecommerce\\client\\src\\components\\TeaList.js",["140","141"],"import React, {useContext} from 'react';\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\nimport {Row} from \"react-bootstrap\";\nimport TeaItem from \"./TeaItem\";\n\n\nconst TeaList = observer(({}) => {\n    const {tea} = useContext(Context)\n    \n\n    let teaLength = tea.teas\n\n    \n\n    if (!teaLength.length) {\n      return (\n          <h1 style={{textAlign: 'center'}}>\n              Нема в наявності!\n          </h1>\n      )\n  }\n\n  const addToOrder = (item) => {\n    let isInArray = false\n    tea.orders.map(el => {\n      if(el.id === item.id)\n        isInArray = true\n    })\n    if(!isInArray){\n    tea.setOrders([...tea.orders, item])\n    } else {\n        alert(\"Товар вже в корзині\")\n    }\n  }\n    \n// const addToOrder = (item) => {\n//     let isInArray = false\n//     tea.orders.map(el => {\n//       if(el.id === item.id)\n//         isInArray = true\n//     })\n\n// if(!isInArray) {\n//     tea.setOrders([...tea.orders, item])\n//     tea.setNum(tea.num+1)\t\n// } else {\n// tea.setNum(tea.num+1)\t\n// }\n//   }\n\n\n    return (\n        <Row className=\"d-flex\">\n            {tea.teas.map(tea => \n                <TeaItem addToOrder={addToOrder} key={tea.id} tea={tea}/>   \n             )\n            }\n         \n            \n        </Row>\n    );\n});\n\nexport default TeaList;\n","C:\\proekty\\react node download project ecommerce\\client\\src\\components\\SortBar.js",[],"C:\\proekty\\react node download project ecommerce\\client\\src\\components\\modals\\CreateTea.js",["142","143"],"import React, {useContext, useEffect, useState} from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport {Button, Dropdown, Form, Row, Col} from \"react-bootstrap\";\nimport {Context} from \"../../index\";\nimport {createTea, fetchSorts, fetchTeas, fetchTypes} from \"../../http/teaAPI\";\nimport {observer} from \"mobx-react-lite\";\n\nconst CreateTea = observer(({show, onHide}) => {\n    const {tea} = useContext(Context)\n    const [name, setName] = useState('')\n    const [price, setPrice] = useState(0)\n\n    const [file, setFile] = useState(null)\n    const [info, setInfo] = useState([])\n\n    useEffect(() => {\n        fetchTypes().then(data => tea.setTypes(data))\n        fetchSorts().then(data => tea.setSorts(data))\n    }, [])\n\n    const addInfo = () => {\n        setInfo([...info, {title: '', description: '', number: Date.now()}])\n    }\n    const removeInfo = (number) => {\n        setInfo(info.filter(i => i.number !== number))\n    }\n    const changeInfo = (key, value, number) => {\n        setInfo(info.map(i => i.number === number ? {...i, [key]: value} : i))\n    }\n\n    const selectFile = e => {\n        setFile(e.target.files[0])\n    }\n\n    const addTea = () => {\n        const formData = new FormData()\n        formData.append('name', name)\n        formData.append('price', `${price}`)\n        formData.append('img', file)\n\n        formData.append('sortId', tea.selectedSort.id)\n        formData.append('typeId', tea.selectedType.id)\n        formData.append('info', JSON.stringify(info))\n        createTea(formData).then(data => onHide())\n    }\n\n    return (\n        <Modal\n            show={show}\n            onHide={onHide}\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Додати чай\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Dropdown className=\"mt-2 mb-2\">\n                        <Dropdown.Toggle variant='warning'>{tea.selectedType.name || \"Обрати тип\"}</Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            {tea.types.map(type =>\n                                <Dropdown.Item\n                                    onClick={() => tea.setSelectedType(type)}\n                                    key={type.id}\n                                >\n                                    {type.name}\n                                </Dropdown.Item>\n                            )}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    <Dropdown className=\"mt-2 mb-2\">\n                        <Dropdown.Toggle>{tea.selectedSort.name || \"Оберіть сорт\"}</Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            {tea.sorts.map(sort =>\n                                <Dropdown.Item\n                                    onClick={() => tea.setSelectedSort(sort)}\n                                    key={sort.id}\n                                >\n                                    {sort.name}\n                                </Dropdown.Item>\n                            )}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    <Form.Control\n                        value={name}\n                        onChange={e => setName(e.target.value)}\n                        className=\"mt-3\"\n                        placeholder=\"Введіть назву чаю\"\n                    />\n                    <Form.Control\n                        value={price}\n                        onChange={e => setPrice(Number(e.target.value))}\n                        className=\"mt-3\"\n                        placeholder=\"Введіть ціну чаю\"\n                        type=\"number\"\n                    />\n                    <Form.Control\n                        className=\"mt-3\"\n                        type=\"file\"\n                        onChange={selectFile}\n                    />\n                    <hr/>\n                    <Button\n                        variant={\"outline-dark\"}\n                        onClick={addInfo}\n                    >\n                        Додати нову характеристику\n                    </Button>\n                    {info.map(i =>\n                        <Row className=\"mt-4\" key={i.number}>\n                            <Col md={4}>\n                                <Form.Control\n                                    value={i.title}\n                                    onChange={(e) => changeInfo('title', e.target.value, i.number)}\n                                    placeholder=\"Введіть назву характеристики\"\n                                />\n                            </Col>\n                            <Col md={4}>\n                                <Form.Control\n                                    value={i.description}\n                                    onChange={(e) => changeInfo('description', e.target.value, i.number)}\n                                    placeholder=\"Введіть опис характеристики\"\n                                />\n                            </Col>\n                            <Col md={4}>\n                                <Button\n                                    onClick={() => removeInfo(i.number)}\n                                    variant={\"outline-danger\"}\n                                >\n                                    Х\n                                </Button>\n                            </Col>\n                        </Row>\n                    )}\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"danger\" onClick={onHide}>Х</Button>\n                <Button variant=\"success\" onClick={addTea}>Додати</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n});\n\nexport default CreateTea;\n","C:\\proekty\\react node download project ecommerce\\client\\src\\components\\modals\\CreateSort.js",["144"],"import React, {useState} from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport {Button, Form} from \"react-bootstrap\";\nimport {createSort, createType} from \"../../http/teaAPI\";\n\nconst CreateSort = ({show, onHide}) => {\n    const [value, setValue] = useState('')\n\n    const addSort = () => {\n        createSort({name: value}).then(data => {\n            setValue('')\n            onHide()\n        })\n    }\n    return (\n        <Modal\n            show={show}\n            onHide={onHide}\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Додати сорт\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Form.Control\n                        value={value}\n                        onChange={e => setValue(e.target.value)}\n                        placeholder={\"Введіть назву сорту\"}\n                    />\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"danger\" onClick={onHide}>X</Button>\n                <Button variant=\"success\" onClick={addSort}>Додати</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default CreateSort;\n","C:\\proekty\\react node download project ecommerce\\client\\src\\components\\TeaItem.js",["145"],"import React from 'react';\nimport { useEffect } from 'react';\nimport {Button, Card, Col} from \"react-bootstrap\";\nimport Image from \"react-bootstrap/Image\";\n\nimport {useHistory} from \"react-router-dom\"\nimport {TEA_ROUTE} from \"../utils/consts\";\n\nconst TeaItem = ({tea, addToOrder}) => {\n    const history = useHistory()\n\n  \n   \n    return (\n        \n        <>\n        \n     <Col md={3} className={\"mt-3 mx-2\"} >\n    <Card style={{width: 150}} border={\"light\"}>\n        <Image width={150} height={150} src={process.env.REACT_APP_API_URL + tea.img}/>\n        <div className=\"text-black-50 mt-1 d-flex justify-content-between align-items-center\">\n            \n            \n        </div>\n        <p  className=' strelka' onClick={() => history.push(TEA_ROUTE + '/' + tea.id)}>Дізнатись більше <span className='strelka-right'>&#8594;</span> </p>\n        <div>{tea.name}</div>\n        <div className='text-center'>  {tea.price} грн </div>\n        <Button onClick={() => addToOrder(tea)} variant='success'> Купити </Button>\n    </Card>\n</Col> \n   \n    </>\n    );\n};\n\nexport default TeaItem;\n","C:\\proekty\\react node download project ecommerce\\client\\src\\pages\\TeaPage.js",["146","147"],"C:\\proekty\\react node download project ecommerce\\client\\src\\components\\Footer.js",["148","149"],"import React from 'react';\r\n\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\n\r\nimport Container from \"react-bootstrap/Container\";\r\nimport { Col, Row } from 'react-bootstrap';\r\n\r\nconst Footer = () => {\r\n\r\n    \r\n\r\n    return (\r\n\r\n        <Navbar bg=\"dark\" variant=\"dark\" className='mt-5'>\r\n            <Container className='mt-5 justify-content-center'>\r\n                <div> <p className='text-light'>+380-55-555-5555</p>\r\n                    <p className=' text-light'>Київ, вулиця Стуса 55 </p>\r\n          \r\n                    <p className='text-light'>Усі права захищені &copy; </p>\r\n               \r\n                    </div>\r\n            </Container>\r\n        </Navbar>\r\n\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n","C:\\proekty\\react node download project ecommerce\\client\\src\\http\\clientAPI.js",["150"],"import {$authHost, $host} from \"./index\";\r\n\r\n\r\n\r\n\r\nexport const createBasket = async (client) => {\r\n    const {data} = await $host.post('api/basket', client)\r\n    return data\r\n}\r\n\r\nexport const fetchBasket = async () => {\r\n    const {data} = await $host.get('api/basket')\r\n    return data\r\n}\r\n\r\n","C:\\proekty\\react node download project ecommerce\\client\\src\\components\\NavBarComp.js",[],{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","severity":1,"message":"156","line":8,"column":18,"nodeType":"157","messageId":"158","endLine":8,"endColumn":23},{"ruleId":"159","severity":1,"message":"160","line":30,"column":8,"nodeType":"161","endLine":30,"endColumn":10,"suggestions":"162"},{"ruleId":"155","severity":1,"message":"163","line":16,"column":8,"nodeType":"157","messageId":"158","endLine":16,"endColumn":18},{"ruleId":"155","severity":1,"message":"164","line":29,"column":10,"nodeType":"157","messageId":"158","endLine":29,"endColumn":13},{"ruleId":"155","severity":1,"message":"165","line":29,"column":15,"nodeType":"157","messageId":"158","endLine":29,"endColumn":21},{"ruleId":"166","severity":1,"message":"167","line":159,"column":24,"nodeType":"168","endLine":159,"endColumn":110},{"ruleId":"155","severity":1,"message":"169","line":26,"column":17,"nodeType":"157","messageId":"158","endLine":26,"endColumn":21},{"ruleId":"155","severity":1,"message":"156","line":3,"column":9,"nodeType":"157","messageId":"158","endLine":3,"endColumn":14},{"ruleId":"159","severity":1,"message":"170","line":24,"column":8,"nodeType":"161","endLine":24,"endColumn":10,"suggestions":"171"},{"ruleId":"159","severity":1,"message":"170","line":31,"column":8,"nodeType":"161","endLine":31,"endColumn":55,"suggestions":"172"},{"ruleId":"166","severity":1,"message":"167","line":45,"column":21,"nodeType":"168","endLine":45,"endColumn":177},{"ruleId":"155","severity":1,"message":"173","line":1,"column":28,"nodeType":"157","messageId":"158","endLine":1,"endColumn":37},{"ruleId":"155","severity":1,"message":"174","line":5,"column":35,"nodeType":"157","messageId":"158","endLine":5,"endColumn":40},{"ruleId":"155","severity":1,"message":"175","line":8,"column":24,"nodeType":"157","messageId":"158","endLine":8,"endColumn":35},{"ruleId":"155","severity":1,"message":"176","line":4,"column":8,"nodeType":"157","messageId":"158","endLine":4,"endColumn":11},{"ruleId":"177","severity":1,"message":"178","line":8,"column":27,"nodeType":"179","messageId":"180","endLine":8,"endColumn":29},{"ruleId":"181","severity":1,"message":"182","line":26,"column":23,"nodeType":"183","messageId":"184","endLine":26,"endColumn":25},{"ruleId":"155","severity":1,"message":"185","line":5,"column":32,"nodeType":"157","messageId":"158","endLine":5,"endColumn":41},{"ruleId":"159","severity":1,"message":"170","line":19,"column":8,"nodeType":"161","endLine":19,"endColumn":10,"suggestions":"186"},{"ruleId":"155","severity":1,"message":"187","line":4,"column":21,"nodeType":"157","messageId":"158","endLine":4,"endColumn":31},{"ruleId":"155","severity":1,"message":"173","line":2,"column":10,"nodeType":"157","messageId":"158","endLine":2,"endColumn":19},{"ruleId":"159","severity":1,"message":"188","line":17,"column":8,"nodeType":"161","endLine":17,"endColumn":10,"suggestions":"189"},{"ruleId":"181","severity":1,"message":"182","line":24,"column":27,"nodeType":"183","messageId":"184","endLine":24,"endColumn":29},{"ruleId":"155","severity":1,"message":"176","line":6,"column":10,"nodeType":"157","messageId":"158","endLine":6,"endColumn":13},{"ruleId":"155","severity":1,"message":"190","line":6,"column":15,"nodeType":"157","messageId":"158","endLine":6,"endColumn":18},{"ruleId":"155","severity":1,"message":"191","line":1,"column":9,"nodeType":"157","messageId":"158","endLine":1,"endColumn":18},"no-native-reassign",["192"],"no-negated-in-lhs",["193"],"no-unused-vars","'Image' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["194"],"'NavBarComp' is defined but never used.","'sum' is assigned a value but never used.","'setSum' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'data' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'tea'. Either include it or remove the dependency array.",["195"],["196"],"'useEffect' is defined but never used.","'Alert' is defined but never used.","'fetchBasket' is defined but never used.","'Col' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'fetchTeas' is defined but never used.",["197"],"'createType' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["198"],"'Row' is defined but never used.","'$authHost' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"199","fix":"200"},{"desc":"201","fix":"202"},{"desc":"203","fix":"204"},{"desc":"201","fix":"205"},{"desc":"206","fix":"207"},"Update the dependencies array to be: [user]",{"range":"208","text":"209"},"Update the dependencies array to be: [tea]",{"range":"210","text":"211"},"Update the dependencies array to be: [tea.page, tea.selectedType, tea.selectedSort, tea]",{"range":"212","text":"213"},{"range":"214","text":"211"},"Update the dependencies array to be: [id]",{"range":"215","text":"216"},[720,722],"[user]",[876,878],"[tea]",[1086,1133],"[tea.page, tea.selectedType, tea.selectedSort, tea]",[724,726],[519,521],"[id]"]